name: NPM CI - Build and Test

on:
  push:
    branches: [ "master", "staging", "env/*" ]
  pull_request:
    branches: [ "master", "staging", "env/*" ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ${{ matrix.os }}
    timeout-minutes: 5

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        os: [ubuntu-latest] #[ubuntu-latest, windows-latest, macOS-latest]
        architecture: [x64]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }} - ${{ matrix.architecture }} on ${{ matrix.os }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          architecture: ${{ matrix.architecture }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list
      - name: NPM Clean Install
        run: npm ci
      - name: NPM run build (if present)
        run: npm run build --if-present
      - name: NPM run Jest Tests
        run: npm run test:headless
        env:
          CI: true # This sets the CI environment variable to true which means that warnings from tests will be treated as errors and cause the build to fail.
          # https://mvolkmann.github.io/blog/github/actions/?v=1.0.9
