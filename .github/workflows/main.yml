on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize]

name: NPM CI - Build and Test

env:
  NAPI_CLI_VERSION: 2.7.0
  TURBO_VERSION: 1.3.2-master.1
  RUST_TOOLCHAIN: nightly-2022-02-23
  PNPM_VERSION: 7.2.
jobs:
  npm-ci:
    name: NPM CI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: NPM CI
        run: sudo apt install moreutils
  
  # unit-test:
  #   name: Unit tests
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Use Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #     - run: npm ci
  #     - run: npm run jest

  # cypress-run:
  #   runs-on: ubuntu-latest
  #   name: cypress-run
  #   needs: [unit-test]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2.4.2
  #     # Install NPM dependencies, cache them correctly
  #     # and run all Cypress tests
  #     - name: Cypress.io
  #       uses: cypress-io/github-action@v4.2.0
  #       timeout-minutes: 10
  #       with:
  #         build: npm run build
  #         start: npm start
  #         browser: chrome
  #         headless: true
  #       env:
  #         # pass the Dashboard record key as an environment variable
  #         CYPRESS_RECORD_KEY: ${{ secrets.dashboardRecordKey }}
  build:
      runs-on: ubuntu-latest
      needs: [npm-ci]
      name: Build
      steps:
        - uses: actions/checkout@v3
        - name: Use Node.js ${{ matrix.node-version }} - ${{ matrix.architecture }} on ${{ matrix.os }}
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.node-version }}
            architecture: ${{ matrix.architecture }}
            cache: 'npm'
            cache-dependency-path: '**/package-lock.json'
        - name: Cache dependencies
          uses: actions/cache@v2
          with:
            path: ~/.npm
            key: npm-${{ hashFiles('package-lock.json') }}
            restore-keys: npm-
        - name: NPM Clean Install
          run: npm install --force && npm run build
        - uses: actions/checkout@v3
        - name: Use Node.js ${{ matrix.node-version }} - ${{ matrix.architecture }} on ${{ matrix.os }}
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.node-version }}
            architecture: ${{ matrix.architecture }}
            cache: 'npm'
            cache-dependency-path: '**/package-lock.json'
        - name: Cache dependencies
          uses: actions/cache@v2
          with:
            path: ~/.npm
            key: npm-${{ hashFiles('package-lock.json') }}
            restore-keys: npm-
        - name: NPM Clean Install
          run: npm install --package-lock-only
  tag:
    runs-on: ubuntu-latest
    name: Version Tag Commit
    needs: [build]
    steps:
        - uses: actions/checkout@v3
        - uses: actions/setup-node@v3
          with:
            node-version: 16
        - name: NPM Clean Install
          run: node -v && export VERSION=$(node -p "require('./package.json').version") && echo $VERSION
        - name: Bump version and push tag
          id: tag_version
          uses: mathieudutour/github-tag-action@v6.0
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
        - name: Create a version tag
          uses: ncipollo/release-action@v1
          with:
            tag: ${{ steps.tag_version.outputs.new_tag }}
            name: Release ${{ steps.tag_version.outputs.new_tag }}
            body: ${{ steps.tag_version.outputs.changelog }}
  deploy:
    name: Upload to S3
    runs-on: ubuntu-latest
    needs: [tag]
    steps:
      - uses: actions/checkout@master
      - uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-west-1'   # optional: defaults to us-east-1
          SOURCE_DIR: 'out'      # optional: defaults to entire repository
