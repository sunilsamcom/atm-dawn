on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize]

name: Build, test, and deploy

env:
  NAPI_CLI_VERSION: 2.7.0
  TURBO_VERSION: 1.3.2-master.1
  RUST_TOOLCHAIN: nightly-2022-02-23
  PNPM_VERSION: 7.2.1

jobs:
  npm-ci:
    name: NPM CI - Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install moreutils
  lint:
    runs-on: ubuntu-latest
    needs: npm-ci
    steps:
      - uses: actions/checkout@v3
      - name: Install lint

  rust-check:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/cache@v3
        id: restore-build
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - run: echo ::set-output name=SWC_CHANGE::$(node scripts/run-for-change.js --type next-swc --exec echo 'yup')
        id: swc-change

      - run: echo ${{ steps.swc-change.outputs.SWC_CHANGE }}

      - name: Install
        uses: actions-rs/toolchain@v1
        if: ${{ steps.swc-change.outputs.SWC_CHANGE == 'yup' }}
        with:
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v3
        if: ${{ steps.swc-change.outputs.SWC_CHANGE == 'yup' }}
        with:
          path: ~/.cargo/registry
          key: stable-ubuntu-clippy-cargo-registry

      - name: Cache cargo index
        uses: actions/cache@v3
        if: ${{ steps.swc-change.outputs.SWC_CHANGE == 'yup' }}
        with:
          path: ~/.cargo/git
          key: stable-ubuntu-clippy-cargo-index

      - name: Check
        if: ${{ steps.swc-change.outputs.SWC_CHANGE == 'yup' }}
        run: |
          cargo fmt -- --check
          cargo clippy --all -- -D warnings
        working-directory: packages/next-swc
  
  checkPrecompiled:
    name: Check Pre-compiled
    runs-on: ubuntu-latest
    needs: rust-check
    env:
      NEXT_TELEMETRY_DISABLED: 1
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          node-version: 16
          check-latest: true

  testUnit:
    name: Test Unit
    runs-on: ubuntu-latest
    needs: [checkPrecompiled]
    env:
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_TEST_JOB: 1
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          node-version: 16
          check-latest: true

  testCypress:
    name: Test Cypress
    runs-on: ubuntu-latest
    needs: [testUnit]
    env:
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_TEST_JOB: 1
    steps:
      - name: Test Cypress
        uses: actions/setup-node@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          node-version: 16
          check-latest: true

  versionCommit:
    name: Create Version Commit
    runs-on: ubuntu-latest
    needs: [testCypress]
    env:
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_TEST_JOB: 1
    steps:
      - name: Test Cypress
        uses: actions/setup-node@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          node-version: 16
          check-latest: true
  build:
    runs-on: ubuntu-latest
    needs: [versionCommit]
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        run: npm run build
  deploymentArtifact:
    runs-on: ubuntu-latest
    needs: [build]
    env:
      NEXT_TELEMETRY_DISABLED: 1
      # we build a dev binary for use in CI so skip downloading
      # master next-swc binaries in the monorepo
      NEXT_SKIP_NATIVE_POSTINSTALL: 1
    outputs:
      docsChange: ${{ steps.docs-change.outputs.DOCS_CHANGE }}
      isRelease: ${{ steps.check-release.outputs.IS_RELEASE }}
      weekNum: ${{ steps.get-week.outputs.WEEK }}
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        if: ${{ steps.docs-change.outputs.docsChange == 'nope' }}
        with:
          node-version: 16
          check-latest: true

      - uses: actions/checkout@v3
        with:
          fetch-depth: 25
  deploy:
    runs-on: ubuntu-latest
    needs: [deploymentArtifact]
    env:
      NEXT_TELEMETRY_DISABLED: 1
      # we build a dev binary for use in CI so skip downloading
      # master next-swc binaries in the monorepo
      NEXT_SKIP_NATIVE_POSTINSTALL: 1
    outputs:
      docsChange: ${{ steps.docs-change.outputs.DOCS_CHANGE }}
      isRelease: ${{ steps.check-release.outputs.IS_RELEASE }}
      weekNum: ${{ steps.get-week.outputs.WEEK }}
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        if: ${{ steps.docs-change.outputs.docsChange == 'nope' }}
        with:
          node-version: 16
          check-latest: true

      - uses: actions/checkout@v3
        with:
          fetch-depth: 25