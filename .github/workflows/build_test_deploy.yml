on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize]

name: NPM CI - Build and Test

env:
  NAPI_CLI_VERSION: 2.7.0
  TURBO_VERSION: 1.3.2-master.1
  RUST_TOOLCHAIN: nightly-2022-02-23
  PNPM_VERSION: 7.2.1

jobs:
  npm-ci:
    name: NPM CI - Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: NPM CI
        run: sudo apt install moreutils

  build:
    runs-on: ubuntu-latest
    needs: npm-ci
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        if: ${{ steps.docs-change.outputs.docsChange == 'nope' }}
        with:
          include: ./npm-install-force.yml
  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          check-latest: true

      - run: npm i -g pnpm@${PNPM_VERSION}

      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}
      - run: ./scripts/check-manifests.js
      - run: pnpm lint

  rust-check:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/cache@v3
        id: restore-build
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - run: echo ::set-output name=SWC_CHANGE::$(node scripts/run-for-change.js --type next-swc --exec echo 'yup')
        id: swc-change

      - run: echo ${{ steps.swc-change.outputs.SWC_CHANGE }}

      - name: Install
        uses: actions-rs/toolchain@v1
        if: ${{ steps.swc-change.outputs.SWC_CHANGE == 'yup' }}
        with:
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v3
        if: ${{ steps.swc-change.outputs.SWC_CHANGE == 'yup' }}
        with:
          path: ~/.cargo/registry
          key: stable-ubuntu-clippy-cargo-registry

      - name: Cache cargo index
        uses: actions/cache@v3
        if: ${{ steps.swc-change.outputs.SWC_CHANGE == 'yup' }}
        with:
          path: ~/.cargo/git
          key: stable-ubuntu-clippy-cargo-index

      - name: Check
        if: ${{ steps.swc-change.outputs.SWC_CHANGE == 'yup' }}
        run: |
          cargo fmt -- --check
          cargo clippy --all -- -D warnings
        working-directory: packages/next-swc

  checkPrecompiled:
    name: Check Pre-compiled
    runs-on: ubuntu-latest
    needs: rust-check
    env:
      NEXT_TELEMETRY_DISABLED: 1
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          node-version: 16
          check-latest: true

      # https://github.com/actions/virtual-environments/issues/1187
      - name: tune linux network
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        run: sudo ethtool -K eth0 tx off rx off

      - uses: actions/checkout@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: mv .git .git-bak
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - uses: actions/cache@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - run: npm i -g pnpm@${PNPM_VERSION}

      - run: rm -rf .git && mv .git-bak .git
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: ./scripts/check-pre-compiled.sh
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - uses: EndBug/add-and-commit@v7
        if: ${{ failure() }}
        with:
          add: 'packages/next/compiled packages/next/bundles --force'
          message: 'âš™ Update compiled files'

  testUnit:
    name: Test Unit
    runs-on: ubuntu-latest
    needs: [checkPrecompiled]
    env:
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_TEST_JOB: 1
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          node-version: 16
          check-latest: true

      - uses: actions/cache@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - uses: actions/download-artifact@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          name: next-swc-test-binary
          path: packages/next-swc/native

      - run: npm i -g pnpm@${PNPM_VERSION}
        if: ${{needs.build.outputs.docsChange == 'nope'}}

      - run: node run-tests.js --type unit
        if: ${{needs.build.outputs.docsChange == 'nope'}}

  releaseStats:
    name: Release Stats
    runs-on: ubuntu-latest
    needs: [testUnit]
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          check-latest: true

      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - uses: actions/download-artifact@v3
        with:
          name: next-swc-test-binary
          path: packages/next-swc/native

      - run: cp -r packages/next-swc/native .github/actions/next-stats-action/native

      - run: ./scripts/release-stats.sh
      - uses: ./.github/actions/next-stats-action
        env:
          PR_STATS_COMMENT_TOKEN: ${{ secrets.PR_STATS_COMMENT_TOKEN }}

  build-performance-metrics:
    name: Performance Metrics for Release Build
    runs-on: ubuntu-latest
    needs: [releaseStats]
    if: needs.check-trace-secrests.outputs.trace-api-key == 'true'
    env:
      NEXT_TELEMETRY_DISABLED: 1
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          node-version: 16
          check-latest: true

      - uses: actions/cache@v3
        id: restore-build
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          path: ./*
          key: ${{ github.sha }}-${{ github.run_number }}

      - name: Set Git Short sha Env
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        run: echo "GIT_SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      - name: Check Git Short sha Env
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        run: echo ${GIT_SHORT_SHA}

      - uses: actions/download-artifact@v3
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          name: next-swc-test-binary
          path: packages/next-swc/native

      - name: Generate metrics data
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        run: |
          yarn --cwd bench/nested-deps install
          node bench/nested-deps/bench.mjs build
      - uses: datadog/agent-github-action@v1
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        with:
          api_key: ${{ secrets.DATA_DOG_API_KEY }}
      - name: Sending metrics data to Datadog
        if: ${{needs.build.outputs.docsChange == 'nope'}}
        run: |
          node scripts/trace-dd.mjs bench/nested-deps/.next/trace build ${GIT_SHORT_SHA} ./bench/nested-deps/next.config.js
        env:
          DATA_DOG_API_KEY: ${{ secrets.DATA_DOG_API_KEY }}
          DD_TRACE_PARTIAL_FLUSH_MIN_SPANS: 10
          DD_ENV: master
          DD_SERVICE: nextjs-dev-build
          DD_TRACE_DEBUG: true